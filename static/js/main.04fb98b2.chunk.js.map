{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid.jpg","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","handlecountryChange","fetchedfetchCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","corona","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04fb98b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1ze2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1PhB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__7jAgL\",\"card\":\"Cards_card__2wIrC\",\"infected\":\"Cards_infected__iLQTv\",\"recovered\":\"Cards_recovered__1re2U\",\"deaths\":\"Cards_deaths__20t-J\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'loading'\r\n    }\r\n  console.log(\"cardss\", confirmed);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant='h5'>\r\n                <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2}\r\n                separator=','\r\n                />\r\n            </Typography>\r\n            <Typography colr='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant='body2'>number of active cases of covid19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card}  xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>recovery</Typography>\r\n            <Typography variant='h5'>\r\n                <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2}\r\n                separator=','\r\n                />\r\n            </Typography>\r\n            <Typography colr='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant='body2'>number of recovery cases of covid19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card}  xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>deaths</Typography>\r\n            <Typography variant='h5'>\r\n                <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2}\r\n                separator=','\r\n                />\r\n            </Typography>\r\n            <Typography colr='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant='body2'>number of death cases of covid19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"http://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    // const modified={\r\n    //     confirmed=confirmed,\r\n    //     recovered=recovered,\r\n    //     deaths=deaths,\r\n    //     lastUpdate=lastUpdate\r\n    // }\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      data: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    //console.log(\"shi\",countries)\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({ data, country }) => {\r\n  // const { dailyData, setDailyData  } = useState({});\r\n  //console.log('dat',useState([]))\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    console.log(dailyData);\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ data }) => data),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgb(255,0,0,0.5\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {lineChart}\r\n      <p>haha</p>\r\n      <h1>hello sam</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl, StylesProvider } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\nconst CountryPicker = ({ handlecountryChange }) => {\r\n  const [fetchedfetchCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  // console.log(\"fetchedc\",fetchedfetchCountries)\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handlecountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedfetchCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}{\" \"}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/covid.51244dbd.jpg\";","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport  corona from './images/covid.jpg'\nclass App extends React.Component {\n  state = {\n    data: {},\n    country:'',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n    // console.log(data)\n  }\n  handlecountryChange =async (country)=>{\n   const fetchedData = await fetchData (country)\n    //fetch data\n    //set fata\n  //  console.log('fd',fetchedData)\n   // console.log(country)\n\n   this.setState({data:fetchedData, country:country})\n  }\n  render() {\n    const { data,country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img  className={styles.image} src={corona} alt='covid' />\n        <Cards data={data} />\n        <CountryPicker  handlecountryChange={this.handlecountryChange}/>\n        <Chart  data={data} country={country}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2nZRA\",\"image\":\"App_image__28yzT\"};"],"sourceRoot":""}